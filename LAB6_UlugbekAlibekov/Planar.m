clear L

deg = pi/180;

L1 = 1;
L2 = 1;
L3 = 1;
L4 = 1;
L5 = 1;

M1 = 0;
M2 = 10;
M3 = 10;
M4 = 10;
M5 = 10;

DiagonalInertiaMatrix = [1 0 0; 0 1 0; 0 0 1];

L(1) = Revolute('d', 0, 'a', L1, 'alpha', 0, ...
    'I', DiagonalInertiaMatrix, ...
    'r', [0, 0, 0], ...
    'm', M1, ...
    'Jm', 0.0001, ...
    'G', 500, ...
    'B', 0.0001, ...
    'Tc', 0.0001, ...
    'qlim', [-180 180]*deg );

L(2) = Revolute('d', 0, 'a', L2, 'alpha', 0, ...
    'I', DiagonalInertiaMatrix, ...
    'r', [0, 0.5, 0], ...
    'm', M2, ...
    'Jm', 0.0001, ...
    'G', 500, ...
    'B', 0.0001, ...
    'Tc', 0.0001, ...
    'qlim', [-120 120]*deg );

L(3) = Revolute('d', 0, 'a', L3, 'alpha', 0,  ...
    'I', DiagonalInertiaMatrix, ...
    'r', [0, 0.5, 0], ...
    'm', M3, ...
    'Jm',0.0001, ...
    'G', 500, ...
    'B', 0.0001, ...
    'Tc', 0.0001, ...
    'qlim', [-120 120]*deg );

L(4) = Revolute('d', 0, 'a', L4, 'alpha', 0,  ...
    'I', DiagonalInertiaMatrix, ...
    'r', [0, 0.5, 0], ...
    'm', M4, ...
    'Jm',0.0001, ...
    'G', 500, ...
    'B', 0.0001, ...
    'Tc', 0.0001, ...
    'qlim', [-120 120]*deg );

L(5) = Revolute('d', 0, 'a', L5, 'alpha', 0,  ...
    'I', DiagonalInertiaMatrix, ...
    'r', [0, 0.5, 0], ...
    'm', M5, ...
    'Jm',0.0001, ...
    'G', 500, ...
    'B', 0.0001, ...
    'Tc', 0.0001, ...
    'qlim', [-120 120]*deg );

Planar_rob = SerialLink(L,'name', 'RobotUla');

clear L;

figure(1)

Planar_rob.plot([0,0,0,0,0])
Planar_rob.teach([0,0,0,0,0])


